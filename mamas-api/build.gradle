//plugins {
//    id 'org.springframework.boot'
//    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
//}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    if (rootProject.findProject(':mamas-search'))
        compile project(':mamas-search')

    // 이 의존성들은 어디에 있는게 좋을까.. 프로젝트 자체가 spring인데 root에 놓는게 나을까..? boot-starter-web에 있는 logger도 전 모듈에서 다 쓰긴 써야한다.
    implementation "org.springframework.boot:spring-boot-starter-groovy-templates:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-mustache:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
//    testImplementation "org.springframework.security:spring-security-test:${springBootVersion}"
}
test {
    useJUnitPlatform()
}